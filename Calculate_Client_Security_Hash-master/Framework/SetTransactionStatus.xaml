<Activity mc:Ignorable="sap sap2010" x:Class="SetTransactionStatus" this:SetTransactionStatus.in_TransactionItem="[Nothing]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Exception variable that is used during transitions between states." Name="in_SystemError" Type="InArgument(s:Exception)" />
    <x:Property sap2010:Annotation.AnnotationText="Exception variable that is used during transitions between states." Name="in_BusinessRuleException" Type="InArgument(ui:BusinessRuleException)" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property sap2010:Annotation.AnnotationText="This variable controls the number of attempts of retrying the process in case of System Error." Name="io_RetryNumber" Type="InOutArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Name="io_TransactionNumber" Type="InOutArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="Allow the optional addition of information about the transaction item." Name="in_TransactionField1" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Allow the optional addition of information about the transaction item." Name="in_TransactionField2" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction ID used for information and logging purposes." Name="in_TransactionID" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>694,1203</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SetTransactionStatus_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="1. Change the TransactionItem type : Uipath.Core.QueueItem -&gt; System.Data.DataRow type&#xD;&#xA;2. Remove the three SetTransactionStatus activities from the SetTransactionStatus workflow as we are not using the transaction functionality provided by Orchestrator.&#xD;&#xA;(Orchestrator가 제공 한 트랜잭션 기능을 사용하지 않으므로 SetTransactionStatus 워크 플로우에서 세 가지 SetTransactionStatus 활동을 제거하십시오.)&#xD;&#xA;&#xD;&#xA;[Workflow explanation]&#xD;&#xA;Set and log the transaction's status along with extra log fields. &#xA;There can be three possible statuses: Success, Business Rule Exception and System Error (Application Exception).&#xA;&#xA;Business Rule Exception characterizes an irregular situation according to the process's rules and prevents the transaction to be processed. The transaction is not retried in this case, since the result will be the same until the problem that causes the exception is solved.&#xA;For example, it can be considered a BusinessRuleException if a process expects to read an email's attachment, but the sender didn't attach any file. In this case, immediate retries of the transaction will not yield a different result.&#xA;&#xA;On the other hand, system errors are characterized by exceptions whose types are different than BusinessRuleException. When this kind of exception happens, the transaction item can be retried after closing and reopening the applications involved in the process. The rationale behind this is that the exception was caused by a problem in the applications, which might be solved by restarting them.&#xA;&#xA;If Orchestrator queues are the source of transactions, the Set Transaction Status activity is used to update the status. In addition, the retry mechanism is also implemented by Orchestrator.&#xA;&#xA;If Orchestrator queues are not used, the status can be set, for example, by writing to a specific column in a spreadsheet. In such cases, the retry mechanism is covered by the framework and the number of retries is defined in the configuration file.&#xA;&#xA;At the end, io_TransactionNumber is incremented, which makes the framework get the next transaction to be processed.&#xD;&#xA;&#xD;&#xA;번역 : 추가 로그 필드와 함께 트랜잭션 상태를 설정하고 기록합니다.&#xD;&#xA;Success, Business Rule Exception, System Error(응용 프로그램 예외)의 세 가지 가능한 상태가 있습니다.&#xD;&#xA;&#xD;&#xA;Business Rule Exception은 프로세스 규칙에 따라 불규칙한 상황을 특성화하고 트랜잭션이 처리되지 않도록합니다. 이 경우 트랜잭션은 재 시도되지 않습니다. 예외를 발생시키는 문제가 해결 될 때까지 결과가 동일하기 때문입니다.&#xD;&#xA;예를 들어 프로세스가 전자 메일의 첨부 파일을 읽을 것으로 예상하지만 보낸 사람이 파일을 첨부하지 않은 경우 BusinessRuleException으로 간주 될 수 있습니다. 이 경우 거래를 즉시 재시도해도 다른 결과가 나오지 않습니다.&#xD;&#xA;&#xD;&#xA;반면, 시스템 오류는 유형이 BusinessRuleException과 다른 예외를 특징으로 합니다. 이러한 종류의 예외가 발생하면 프로세스와 관련된 응용 프로그램을 닫았다가 다시 연 후에 트랜잭션 항목을 다시 시도 할 수 있습니다. 이것의 근거는 응용 프로그램의 문제로 인해 예외가 발생했다는 것입니다. 응용 프로그램을 다시 시작하면 해결할 수 있습니다.&#xD;&#xA;&#xD;&#xA;Orchestrator 큐가 트랜잭션 소스인 경우 트랜잭션 상태 설정 활동이 상태를 업데이트하는데 사용됩니다. 또한 재시도 메커니즘은 Orchestrator에 의해 구현됩니다.&#xD;&#xA;&#xD;&#xA;Orchestrator 대기열을 사용하지 않으면 스프레드 시트의 특정 열에 쓰는 등의 상태를 설정할 수 있습니다. 이러한 경우 재시도 메커니즘은 프레임 워크에 포함되며 재시도 횟수는 구성 파일에 정의됩니다.&#xD;&#xA;&#xD;&#xA;결국 io_TransactionNumber가 증가하여 프레임 워크가 처리 할 다음 트랜잭션을 얻습니다." DisplayName="Set Transaction Status" sap:VirtualizedContainerService.HintSize="674,1548" sap2010:WorkflowViewState.IdRef="Flowchart_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Width">640</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,136.4</av:PointCollection>
        <x:Double x:Key="Height">750.02</x:Double>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
    </Flowchart.StartNode>
    <FlowDecision x:Name="__ReferenceID1" Condition="[in_BusinessRuleException is Nothing and in_SystemError is Nothing]" DisplayName="Success" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">264.8,136.4</av:Point>
          <av:Size x:Key="ShapeSize">70,87</av:Size>
          <av:PointCollection x:Key="FalseConnector">335.2,180 430,180 430,266.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.False>
        <FlowDecision x:Name="__ReferenceID0" Condition="[in_BusinessRuleException isnot Nothing]" DisplayName="BusinessException" sap:VirtualizedContainerService.HintSize="103,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">378,266.4</av:Point>
              <av:Size x:Key="ShapeSize">103,87</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </FlowDecision>
      </FlowDecision.False>
    </FlowDecision>
    <x:Reference>__ReferenceID0</x:Reference>
  </Flowchart>
</Activity>